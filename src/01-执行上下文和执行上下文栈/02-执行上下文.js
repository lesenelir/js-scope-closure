/*
*   1. 代码分类
*       全局代码
*       函数局部代码
*
*   2. 全局执行上下文
*       在执行全局代码前，将window确定为全局执行上下文
*       对全局数据进行预处理：
*         var定义的全局变量 => undefined，添加为window属性
*         function声明的全局函数 => 赋值fun，添加为window方法
*         this => 赋值window
*
*   3. 函数执行上下文
*       调用函数，准备执行函数体之前，创建对应的函数执行上下文对象（虚拟，保存在栈中）
*       对局部变量进行预处理：
*         形参变量 => 赋值（实参） => 添加为执行上下文属性
*         arguments => 赋值（实参列表），添加为执行上下文属性
*         var定义的全局变量 => undefined，添加为执行上下文属性
*         function声明的全局函数 => 赋值fun，添加为执行上下文方法
*         this => 赋值，调用函数的对象
* */
